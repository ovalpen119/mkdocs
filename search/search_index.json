{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"practica1.1/","title":"Practica 1.1","text":"LAMP Stack en Ubuntu Server <p>Curso 2 ASIR  - Olga Valle </p>"},{"location":"practica1.1/#indice","title":"\u00cdndice","text":"<ol> <li>Repositorio de GitHub</li> <li>Instalar y configurar LAMP</li> <li>Configuraci\u00f3n de Apache</li> <li>Instalar PHP y m\u00f3dulos PHP y MySQL</li> <li>Instalar MySQL</li> <li>Host virtual basado en el nombre de dominio</li> <li>Variables de entorno</li> <li>Instalamos phpMyAdmin    8.1 Instalar phpMyAdmin para acceder v\u00eda web a MySQL</li> <li>Instalaci\u00f3n de Adminer para acceder v\u00eda web a MySQL </li> <li>Instalar un analizador de logs para Apache Server     10.1 GoAccess         10.1.1 Control de acceso a un directorio con autenticaci\u00f3n b\u00e1sica utilizando 000.default.conf        10.1.2 Control de acceso usando .htaccess</li> </ol>"},{"location":"practica1.1/#1-repositorio-de-github","title":"1. Repositorio de GitHub","text":"<ol> <li>instalamos Git:</li> </ol> <pre><code>sudo apt update\nsudo apt install git \n</code></pre> <ol> <li>Configuramos Git </li> </ol> <pre><code>git config --global user.name \"Tu_Nombre\"\ngit config --global user.email tu_email@example.com\n</code></pre> <ol> <li>Clonar un repositorio de GitHub en Visual Studio:</li> </ol> <pre><code>Git clone y el enlace de tu repositorio https://github.com/usuario/repositorio.git \n</code></pre> <p>Visual Studio nos facilita el proceso de control de versiones con Git al integrar opciones gr\u00e1ficas que eliminan la necesidad de usar comandos manuales.</p> <p><code>Git commint -m \u201cdescripcion\u201d</code> <code>Git pull</code> <code>Git push</code>  En el panel izquierdo, dentro de la secci\u00f3n de Control de c\u00f3digo fuente, se nos muestra los cambios pendientes. Aqu\u00ed podemos realizar el commit, hacer pull para obtener los cambios m\u00e1s recientes, y hacer push para enviar nuestras actualizaciones.</p>"},{"location":"practica1.1/#estructura-del-repositorio","title":"Estructura del Repositorio","text":"<pre><code>\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 conf\n\u2502   \u2514\u2500\u2500 000-default.conf\n\u2502   \u2514\u2500\u2500 000-default-stats.conf\n\u2502   \u2514\u2500\u2500 000-default-htaccess.conf\n\u2502   \u2514\u2500\u2500 .htaccess\n\u251c\u2500\u2500 php\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 scripts\n    \u251c\u2500\u2500 .env\n    \u251c\u2500\u2500 install_lamp.sh\n    \u2514\u2500\u2500 install_tools.sh\n</code></pre>"},{"location":"practica1.1/#creacion-de-carpetas-y-archivos","title":"Creaci\u00f3n de carpetas y archivos","text":"<ol> <li>Creo una carpeta llamada scripts<ul> <li>Creo un archivo llamado install_lamp.sh</li> <li>Asignacion de permisos <code>chmod +x install-lamp.sh</code></li> <li>Ejecutamos <code>sudo ./install-lamp.sh</code></li> </ul> </li> </ol>"},{"location":"practica1.1/#2-instalar-y-configurar-lamp","title":"2. Instalar y configurar LAMP","text":"<p>Nos ubicamos en el archivo  Install_lamp.sh</p> <p>### Actualizamos repositorios </p> <pre><code>sudo apt update \n</code></pre>"},{"location":"practica1.1/#actualizamos-los-paquetes","title":"Actualizamos los paquetes","text":"<pre><code>apt upgrade -y\n</code></pre>"},{"location":"practica1.1/#instalamos-el-servidor-web-apache","title":"Instalamos el servidor web Apache","text":"<pre><code>apt install apache2 -y\n</code></pre>"},{"location":"practica1.1/#habilitar-modulos-adicionales-de-apache","title":"Habilitar m\u00f3dulos adicionales de Apache","text":"<pre><code>sudo a2enmod rewrite\n</code></pre>"},{"location":"practica1.1/#reiniciamos-el-servidor-apache2","title":"Reiniciamos el servidor apache2","text":"<pre><code>sudo systemctl restart apache2\n</code></pre>"},{"location":"practica1.1/#3-configuracion-de-apache","title":"3. Configuraci\u00f3n de Apache","text":""},{"location":"practica1.1/#creacion-de-carpetas-y-archivos_1","title":"Creaci\u00f3n de carpetas y archivos","text":"<ol> <li>Crear archivos en la carpeta conf:   </li> <li><code>000-default.conf</code> configuraci\u00f3n del sitio virtual por defecto</li> <li><code>000-default_stats.conf</code></li> </ol> <p>El archivo 000-default.conf se encuentra en la ruta /etc/apache2/sites-available/, donde Apache guarda las configuraciones de los sitios disponibles. Aqu\u00ed se crean o modifican los archivos que definen c\u00f3mo funcionar\u00e1n los sitios</p>"},{"location":"practica1.1/#31-archivos-de-configuracion-de-apache","title":"3.1 Archivos de configuraci\u00f3n de Apache","text":"<p>Los archivos de configuraci\u00f3n de Apache se almacenan en el directorio:</p> <pre><code>/etc/apache2/\n</code></pre> <p>En este directorio encontramos los siguientes archivos y directorios:</p> <pre><code>/* Archivos */\n\u251c\u2500\u2500 apache2.conf\n\u251c\u2500\u2500 envvars\n\u251c\u2500\u2500 magic\n\u2514\u2500\u2500 ports.conf\n\n/* Directorios */\n\u251c\u2500\u2500 conf-available\n\u251c\u2500\u2500 conf-enabled\n\u251c\u2500\u2500 mods-available\n\u251c\u2500\u2500 mods-enabled\n\u251c\u2500\u2500 sites-available \n\u2514\u2500\u2500 sites-enabled\n</code></pre> <p>A continuaci\u00f3n se muestra un ejemplo con el contenido del archivo /etc/apache2/sites-available/000-default.conf</p> <pre><code>    &lt;VirtualHost *:80&gt;\n        #ServerName www.example.com\n        ServerAdmin webmaster@localhost\n        DocumentRoot /var/www/html/\n\n        DirectoryIndex index.php index.html\n\n        ErrorLog ${APACHE_LOG_DIR}/error.log\n        CustomLog ${APACHE_LOG_DIR}/access.log combined\n    &lt;/VirtualHost&gt;\n</code></pre> <ol> <li>Copiamos el archivo de configuraci\u00f3n de Apache  </li> </ol> <pre><code>cp ../conf/000-default.conf /etc/apache2/sites-available \n</code></pre> <p>Estamos copiando el archivo de configuraci\u00f3n 000-default.conf desde la carpeta ../conf/ hacia el directorio /etc/apache2/sites-available/  Este paso es necesario para mover la configuraci\u00f3n a la ubicaci\u00f3n donde Apache gestiona los archivos de los sitios web.</p> <p>Una vez hecho los cambios en los archivos de configuraci\u00f3n, tenemos que reiniciar el servicio de Apache para que los cambios se apliquen.</p> <pre><code>sudo systemctl restart apache2\n</code></pre> <p>Abre tu navegador y visita http://IP para comprobar que Apache est\u00e1 funcionando. Deber\u00edas ver la p\u00e1gina de bienvenida de Apache.</p>"},{"location":"practica1.1/#4-instalar-php-y-modulos-php-y-mysql","title":"4. Instalar PHP y modulos PHP y MySQL","text":"<p>Para que un servidor web Apache pueda procesar c\u00f3digo PHP vamos a necesitar instalar el int\u00e9rprete de PHP y algunos m\u00f3dulos adicionales.</p> <pre><code>sudo apt install php libapache2-mod-php php-mysql -y \n</code></pre> <p>Reiniciamos el servidor apache </p> <pre><code>sudo systemctl restart apache2\n</code></pre> <p>Comprobar que se hizo correctamente creamos un archivo PHP llamado <code>index.php</code> en el directorio <code>/var/www/html</code></p> <pre><code>&lt;?\nphp phpinfo();\n ?&gt;\n</code></pre> <p>Copiamos el script de Prueba de PHP en <code>/var/www/html</code></p> <pre><code>cp ../php/index.php /var/www/html\n</code></pre> <p>Modificamos el propietario y el grupo del archivo index.php</p> <pre><code>sudo chown -R www-data:www-data /var/www/html\n</code></pre> <p>Ahora accede desde un navegador a la http://IP/info.php, donde IP ser\u00e1 la direcci\u00f3n IP de su m\u00e1quina virtual</p>"},{"location":"practica1.1/#5-instalar-mysql","title":"5. Instalar MySQL","text":"<pre><code>sudo apt install mysql-server -y\n</code></pre> <p>Verifica si esta funcionando </p> <pre><code>sudo systemctl status mysql\n</code></pre>"},{"location":"practica1.1/#6-host-virtual-basado-en-el-nombre-de-dominio","title":"6. Host virtual basado en el nombre de dominio","text":""},{"location":"practica1.1/#crear-directorios-para-los-sitios-web","title":"Crear directorios para los sitios web","text":"<p>Creamos el directorio dentro de /var/www/html/ para el sitio web</p> <pre><code>sudo mkdir -p /var/www/html/web1\n</code></pre> <p>Modificamos permisos </p> <pre><code> sudo chown -R www-data:www-data /var/www/html\n</code></pre> <p>Creamos archivo de prueba para el sitio web</p> <pre><code>echo \"Sitio web 1\" | sudo tee /var/www/html/web1/index.html\n</code></pre>"},{"location":"practica1.1/#configurar-sitios-virtuales-en-apache","title":"Configurar sitios virtuales en Apache","text":"<p>Contenido del archivo web1.conf:</p> <pre><code>&lt;VirtualHost *:80&gt;\n    ServerAdmin webmaster@web1.com\n    ServerName web1.com\n    DocumentRoot /var/www/html/web1\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n&lt;/VirtualHost&gt;\n</code></pre> <p>Apache viene con un sitio predeterminado llamado 000-default. conf. Deshabilitas este sitio.</p> <p>Deshabilitar el sitio predeterminado de Apache</p> <pre><code>sudo a2dissite 000-default.conf\n</code></pre> <p>Habilitar los sitios web configurados:</p> <pre><code>sudo a2ensite web1.conf\n</code></pre> <p>Para poder comprobar que los sitios virtuales est\u00e1n funcionando correctamente entramos con nuestra IP y el nombre del host</p> <p></p>"},{"location":"practica1.1/#7-variables-de-entorno","title":"7. Variables de entorno","text":"<p>Crear un archivo .env en la carpeta conf con el siguiente contenido:</p> <pre><code>PHPMYADMIN_APP_PASSWORD=password\nDB_USER=usuario\nDG_PASSWORD=password\nDB_NAME=moodle\nSTATS_USERNAME=ovalpen\nSTATS_PASSWORD=ovalpen\n</code></pre>"},{"location":"practica1.1/#creacion-de-carpetas-y-archivos_2","title":"Creaci\u00f3n de carpetas y archivos","text":"<ol> <li>Creo una carpeta llamada scripts  <ul> <li>Creo un archivo llamado install_tools.sh</li> <li>Asignacion de permisos <code>chmod +x install-tools.sh</code></li> <li>Ejecutamos <code>sudo ./install-tools.sh</code></li> </ul> </li> </ol> <p>Importamos el archivo de variables</p> <pre><code>source .env \n</code></pre> <p>Para mostrar los comandos que se van ejecutando</p> <pre><code>set -ex\n</code></pre> <p>Actualizamos los repositorios  <code>sudo apt update</code> Actualizamos los paquetes   <code>sudo apt upgrade</code></p>"},{"location":"practica1.1/#8-instalamos-phpmyadmin","title":"8. Instalamos phpMyAdmin","text":"<pre><code>apt install phpmyadmin php-mbstring php-zip php-gd php-json php-curl -y\n</code></pre>"},{"location":"practica1.1/#81-instalar-phpmyadmin-para-acceder-via-web-a-mysql","title":"8.1 Instalar phpMyAdmin para acceder v\u00eda web a MySQL","text":"<ol> <li>Seleccionar el servidor web que queremos configurar para ejecutar.</li> </ol> <pre><code>echo \"phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2\" | debconf-set-selections \n</code></pre> <ol> <li>Confirmar que desea utilizar dbconfig-common para configurar la base de datos.</li> </ol> <pre><code>echo \"phpmyadmin phpmyadmin/dbconfig-install boolean true\" | debconf-set-selections\n</code></pre> <ol> <li>Seleccionar la contrase\u00f1a para phpMyAdmin.</li> </ol> <pre><code>echo \"phpmyadmin phpmyadmin/mysql/app-pass password $PHPMYADMIN_APP_PASSWORD\" | debconf-set-selections\necho \"phpmyadmin phpmyadmin/app-password-confirm password $PHPMYADMIN_APP_PASSWORD\" | debconf-set-selections\n</code></pre> <p>En este ejemplo estamos guardando la contrase\u00f1a en la variable de entorno $PHPMYADMIN_APP_PASSWORD que tendremos que configurar previamente asign\u00e1ndole un valor inicial.</p> <p>Comprobamos entrando con nuestra http://IP/phpmyadmin</p> <p></p>"},{"location":"practica1.1/#9-instalacion-de-adminer-para-acceder-via-web-a-mysql","title":"9. Instalaci\u00f3n de Adminer para acceder v\u00eda web a MySQL","text":"<p>Se puede descargar en archivo .php que esta disponible en Adminer para MySQL  y guardarlo en el directorio /var/www/html </p> <ol> <li>Creamos un directorio para Adminer dentro del directorio /var/www/html</li> </ol> <pre><code>mkdir -p /var/www/html/adminer\n</code></pre> <ol> <li>Con la utilidad wget descargamos el archivo de Adminer y con el par\u00e1metro -P indicamos la ruta donde queremos guardar el archivo. </li> </ol> <pre><code>wget https://github.com/vrana/adminer/releases/download/v4.8.1/adminer-4.8.1-mysql.php -P /var/www/html/adminer\n</code></pre> <ol> <li>Renombramos el nombre del script de Adminer</li> </ol> <pre><code>mv /var/www/html/adminer/adminer-4.8.1-mysql.php /var/www/html/adminer/index.php\n</code></pre> <ol> <li>Modificamos el propietario y el grupo del archivo</li> </ol> <pre><code>chown -R www-data:www-data /var/www/html/adminer\n</code></pre> <ol> <li>Creamos una base de datos de ejemplo</li> </ol> <pre><code>mysql -u root &lt;&lt;&lt; \"DROP DATABASE IF EXISTS $DB_NAME\"\nmysql -u root &lt;&lt;&lt; \"CREATE DATABASE $DB_NAME\"\nmysql -u root &lt;&lt;&lt; \"DROP USER IF EXISTS '$DB_USER'@'%'\"\nmysql -u root &lt;&lt;&lt; \"CREATE USER '$DB_USER'@'%' IDENTIFIED BY '$DB_PASSWORD'\"\nmysql -u root &lt;&lt;&lt; \"GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'%'\"\n</code></pre>"},{"location":"practica1.1/#10-instalar-un-analizador-de-logs-para-apache-server","title":"10. Instalar un analizador de logs para Apache Server","text":""},{"location":"practica1.1/#101-goaccess","title":"10.1 GoAccess","text":"<p>Actualizamos los repositorios e instalamos GoAccess.</p> <pre><code>sudo apt update\nsudo apt install goaccess -y\n</code></pre>"},{"location":"practica1.1/#1011-control-de-acceso-a-un-directorio-con-autenticacion-basica-utilizando-000defaultconf","title":"10.1.1 Control de acceso a un directorio con autenticaci\u00f3n b\u00e1sica utilizando 000.default.conf","text":"<p>Crea un directorio llamado stats dentro del directorio /var/www/html donde se podr\u00e1n consultar los informes generados con goaccess. El acceso a este directorio deber\u00e1 estar controlado y solo se podr\u00e1 acceder mediante un usuario y una contrase\u00f1a.</p>"},{"location":"practica1.1/#paso-1","title":"Paso 1","text":"<pre><code>mkdir -p /var/www/html/stats\n</code></pre>"},{"location":"practica1.1/#paso-2","title":"Paso 2","text":"<p>Para ejecutar goaccess en segundo plano podemos utilizar la opci\u00f3n --daemonize.</p> <pre><code>goaccess /var/log/apache2/access.log -o /var/www/html/stats/index.html --log-format=COMBINED --real-time-html --daemonize\n</code></pre>"},{"location":"practica1.1/#paso-3","title":"Paso 3","text":"<p>Creamos archivos de contrase\u00f1a  El archivo de contrase\u00f1as lo guardamos en un directorio seguro que no sea accesible desde el exterior. En nuestro caso el archivo se llamar\u00e1 .htpasswd y lo vamos a guardar en el directorio /etc/apache2</p> <pre><code>sudo htpasswd -bc /etc/apache2/.htpasswd \n$STATS_USERNAME\n$STATS_PASSWORD\n</code></pre>"},{"location":"practica1.1/#paso-4","title":"Paso 4","text":"<p>Editamos el archivo configuraci\u00f3n de Apache.</p> <pre><code>sudo nano /etc/apache2/sites-available/000-default.conf\n</code></pre> <p>A\u00f1adimos la siguiente secci\u00f3n dentro de las etiquetas de <pre><code> &lt;VirtualHost *:80&gt;\n        #ServerName www.example.com\n        ServerAdmin webmaster@localhost\n        DocumentRoot /var/www/html\n\n        DirectoryIndex index.php index.html\n\n        &lt;Directory \"/var/www/html/stats\"&gt;\n          AuthType Basic\n          AuthName \"Acceso restringido\"\n          AuthBasicProvider file\n          AuthUserFile \"/etc/apache2/.htpasswd\"\n          Require valid-user\n        &lt;/Directory&gt;\n\n        ErrorLog ${APACHE_LOG_DIR}/error.log\n        CustomLog ${APACHE_LOG_DIR}/access.log combined\n    &lt;/VirtualHost&gt; \n</code></pre> <p>Copia este archivo a la ubicaci\u00f3n correcta en Apache para que pueda ser utilizado al activar el sitio con a2ensite   (comando para habilitar sitios)</p> <pre><code> cp conf/000-default-stats.conf /etc/apache2/sites-available\n</code></pre>"},{"location":"practica1.1/#paso-5","title":"Paso 5","text":"<p>Reiniciamos el servicio de Apache.</p> <pre><code>sudo systemctl restart apache2\n</code></pre>"},{"location":"practica1.1/#deshabilitar-el-sitio-predeterminado","title":"Deshabilitar el sitio predeterminado","text":"<p>Antes de habilitar los nuevos sitios virtuales vamos a deshabilitar el sitio virtual que viene por defecto.</p> <pre><code>    a2dissite 000-default-stats.conf \n</code></pre>"},{"location":"practica1.1/#habilitar-el-sitio-predeterminado","title":"Habilitar el sitio predeterminado","text":"<pre><code>a2ensite 000-default-htaccess.conf\n</code></pre>"},{"location":"practica1.1/#recargar-el-sistema-de-servicios","title":"Recargar el sistema de servicios","text":"<p>Vuelve a cargar los archivos de configuraci\u00f3n de los servicios sin detener el servicio.</p> <pre><code>systemctl daemon-reload\nsystemctl reload apache2\n</code></pre> <p>Comprobamos entrando con nuestra http://IP/stats</p> <p></p>"},{"location":"practica1.1/#1012-control-de-acceso-usando-htaccess","title":"10.1.2. Control de acceso usando .htaccess","text":"<p>Para habilitar el uso de .htaccess, aseg\u00farate de que en 000-default.conf est\u00e9 configurado AllowOverride All para las carpetas.</p> <p>#### Proteger el archivo .env con .htaccess El contenido del archivo .htaccess ser\u00e1 el siguiente:</p> <pre><code>AuthType Basic\nAuthName \"Acceso restringido\"\nAuthBasicProvider file\nAuthUserFile \"/etc/apache2/.htpasswd\"\nRequire valid-user\n</code></pre> <p>Copiamos el archivo </p> <pre><code>cp ../conf/.htaccess /var/www/html/stats\n</code></pre> <p>Comprobamos entrando con nuestra http://IP/stats</p> <p></p> <p>## 11. Instalar AWStats</p> <p>Instala AWStats</p> <pre><code>sudo apt install awstats\n</code></pre> <p>Configurar Apache para AWStats Habilitar el m\u00f3dulo CGI en Apache:</p> <pre><code>sudo a2enmod cgi\n</code></pre> <p>Crear el archivo de configuraci\u00f3n de AWStats en Apache</p> <pre><code>sudo nano /etc/apache2/conf-available/awstats.conf\n</code></pre> <p>A\u00f1adir la configuraci\u00f3n para AWStats </p> <pre><code>Alias /awstatsclasses \"/usr/share/awstats/lib/\"\nAlias /awstats-icon \"/usr/share/awstats/icon/\"\nAlias /awstatscss \"/usr/share/doc/awstats/examples/css\"\n\nScriptAlias /cgi-bin /usr/lib/cgi-bin/\n\n&lt;Directory \"/usr/lib/cgi-bin/\"&gt;\n    Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch\n    AddHandler cgi-script .pl\n    AllowOverride None\n    Require all granted\n&lt;/Directory&gt;\n\nAlias /awstats \"/usr/lib/cgi-bin/awstats.pl\"\n</code></pre> <p>Habilitar la configuraci\u00f3n de AWStats en Apache:</p> <pre><code>sudo a2enconf awstats\n</code></pre> <p>Recargar Apache para aplicar los cambios</p> <pre><code>sudo systemctl reload apache2\n</code></pre>"},{"location":"practica1.1/#111-configurar-awstats-para-el-sitio-web","title":"11.1 Configurar AWStats para el sitio web","text":"<p>Copiar el archivo de configuraci\u00f3n base de AWStats Crea un archivo de configuraci\u00f3n espec\u00edfico para tu sitio web </p> <pre><code>sudo cp /etc/awstats/awstats.conf /etc/awstats/webolga.conf\n</code></pre> <p>Editar el archivo de configuraci\u00f3n</p> <pre><code>sudo nano /etc/awstats/awstats.webolga.conf\n</code></pre> <ol> <li>Dentro del archivo, cambia lo siguiente:  <ul> <li>SiteDomain: Define el dominio o IP del sitio que vas a monitorear:</li> <li>LogFile: Especifica la ruta del archivo de logs de Apache. Si est\u00e1s utilizando logs separados para cada sitio:</li> <li>DirData: Cambia la ruta del directorio donde AWStats guardar\u00e1 los datos procesados:</li> </ul> </li> </ol> <pre><code>SiteDomain=\"web1.com\"\nLogFile=\"/var/log/apache2/webolga-access.log\"\nDirData=\"/var/lib/awstats\"\n\n</code></pre>"}]}